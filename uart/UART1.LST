C51 COMPILER V9.59.0.0   UART1                                                             02/28/2022 13:20:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN UART1.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UART1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          /*************  功能说明    **************
  14          
  15          本例程基于STC8H8K64U为主控芯片的实验箱9进行编写测试，STC8G、STC8H系列芯片可通用参考.
  16          
  17          串口1全双工中断方式收发通讯程序。
  18          
  19          通过PC向MCU发送数据, MCU收到后通过串口1把收到的数据原样返回.
  20          
  21          用定时器做波特率发生器，建议使用1T模式(除非低波特率用12T)，并选择可被波特率整除的时钟频率，以提高精度。
  22          
  23          下载时, 选择时钟 22.1184MHz (用户可自行修改频率).
  24          
  25          ******************************************/
  26          
  27          #include    "reg51.h"       //包含此头文件后，里面声明的寄存器不需要再手动输入，避免重复定义
  28          
  29          #define MAIN_Fosc       22118400L   //定义主时钟（精确计算115200波特率）
  30          
  31          
  32          typedef     unsigned char   u8;
  33          typedef     unsigned int    u16;
  34          typedef     unsigned long   u32;
  35          
  36          //手动输入声明"reg51.h"头文件里面没有定义的寄存器
  37          sfr INT_CLKO = 0x8F;
  38          sfr AUXR = 0x8E;
  39          sfr AUXR1 = 0xA2;
  40          sfr P_SW1 = 0xA2;
  41          sfr P_SW2 = 0xBA;
  42          sfr TH2  = 0xD6;
  43          sfr TL2  = 0xD7;
  44          sfr IE2   = 0xAF;
  45          
  46          sfr P4   = 0xC0;
  47          sfr P5   = 0xC8;
  48          sfr P6   = 0xE8;
  49          sfr P7   = 0xF8;
  50          sfr P1M1 = 0x91;    //PxM1.n,PxM0.n     =00--->Standard,    01--->push-pull
  51          sfr P1M0 = 0x92;    //                  =10--->pure input,  11--->open drain
  52          sfr P0M1 = 0x93;
  53          sfr P0M0 = 0x94;
  54          sfr P2M1 = 0x95;
  55          sfr P2M0 = 0x96;
C51 COMPILER V9.59.0.0   UART1                                                             02/28/2022 13:20:41 PAGE 2   

  56          sfr P3M1 = 0xB1;
  57          sfr P3M0 = 0xB2;
  58          sfr P4M1 = 0xB3;
  59          sfr P4M0 = 0xB4;
  60          sfr P5M1 = 0xC9;
  61          sfr P5M0 = 0xCA;
  62          sfr P6M1 = 0xCB;
  63          sfr P6M0 = 0xCC;
  64          sfr P7M1 = 0xE1;
  65          sfr P7M0 = 0xE2;
  66          
  67          sbit P00 = P0^0;
  68          sbit P01 = P0^1;
  69          sbit P02 = P0^2;
  70          sbit P03 = P0^3;
  71          sbit P04 = P0^4;
  72          sbit P05 = P0^5;
  73          sbit P06 = P0^6;
  74          sbit P07 = P0^7;
  75          sbit P10 = P1^0;
  76          sbit P11 = P1^1;
  77          sbit P12 = P1^2;
  78          sbit P13 = P1^3;
  79          sbit P14 = P1^4;
  80          sbit P15 = P1^5;
  81          sbit P16 = P1^6;
  82          sbit P17 = P1^7;
  83          sbit P20 = P2^0;
  84          sbit P21 = P2^1;
  85          sbit P22 = P2^2;
  86          sbit P23 = P2^3;
  87          sbit P24 = P2^4;
  88          sbit P25 = P2^5;
  89          sbit P26 = P2^6;
  90          sbit P27 = P2^7;
  91          sbit P30 = P3^0;
  92          sbit P31 = P3^1;
  93          sbit P32 = P3^2;
  94          sbit P33 = P3^3;
  95          sbit P34 = P3^4;
  96          sbit P35 = P3^5;
  97          sbit P36 = P3^6;
  98          sbit P37 = P3^7;
  99          sbit P40 = P4^0;
 100          sbit P41 = P4^1;
 101          sbit P42 = P4^2;
 102          sbit P43 = P4^3;
 103          sbit P44 = P4^4;
 104          sbit P45 = P4^5;
 105          sbit P46 = P4^6;
 106          sbit P47 = P4^7;
 107          sbit P50 = P5^0;
 108          sbit P51 = P5^1;
 109          sbit P52 = P5^2;
 110          sbit P53 = P5^3;
 111          sbit P54 = P5^4;
 112          sbit P55 = P5^5;
 113          sbit P56 = P5^6;
 114          sbit P57 = P5^7;
 115          
 116          
 117          #define     Baudrate1           115200L
C51 COMPILER V9.59.0.0   UART1                                                             02/28/2022 13:20:41 PAGE 3   

 118          #define     UART1_BUF_LENGTH    64
 119          
 120          
 121          u8  TX1_Cnt;    //发送计数
 122          u8  RX1_Cnt;    //接收计数
 123          bit B_TX1_Busy; //发送忙标志
 124          
 125          u8  idata RX1_Buffer[UART1_BUF_LENGTH]; //接收缓冲
 126          
 127          
 128          void UART1_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 129          void PrintString1(u8 *puts);
 130          
 131          
 132          //========================================================================
 133          // 函数: void main(void)
 134          // 描述: 主函数。
 135          // 参数: none.
 136          // 返回: none.
 137          // 版本: VER1.0
 138          // 日期: 2014-11-28
 139          // 备注: 
 140          //========================================================================
 141          void main(void)
 142          {
 143   1          P0M1 = 0x00;   P0M0 = 0x00;   //设置为准双向口
 144   1          P1M1 = 0x00;   P1M0 = 0x00;   //设置为准双向口
 145   1          P2M1 = 0x00;   P2M0 = 0x00;   //设置为准双向口
 146   1          P3M1 = 0x00;   P3M0 = 0x00;   //设置为准双向口
 147   1          P4M1 = 0x00;   P4M0 = 0x00;   //设置为准双向口
 148   1          P5M1 = 0x00;   P5M0 = 0x00;   //设置为准双向口
 149   1          P6M1 = 0x00;   P6M0 = 0x00;   //设置为准双向口
 150   1          P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
 151   1      
 152   1          UART1_config(1);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 153   1          EA = 1; //允许总中断
 154   1      
 155   1          PrintString1("STC8H8K64U UART1 Test Programme!\r\n");  //UART1发送一个字符串
 156   1      
 157   1          while (1)
 158   1          {
 159   2              if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))   //收到数据, 发送空闲
 160   2              {
 161   3                  SBUF = RX1_Buffer[TX1_Cnt];     //把收到的数据远样返回
 162   3                  B_TX1_Busy = 1;
 163   3                  if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
 164   3              }
 165   2          }
 166   1      }
 167          
 168          
 169          //========================================================================
 170          // 函数: void PrintString1(u8 *puts)
 171          // 描述: 串口1发送字符串函数。
 172          // 参数: puts:  字符串指针.
 173          // 返回: none.
 174          // 版本: VER1.0
 175          // 日期: 2014-11-28
 176          // 备注: 
 177          //========================================================================
 178          void PrintString1(u8 *puts) //发送一个字符串
 179          {
C51 COMPILER V9.59.0.0   UART1                                                             02/28/2022 13:20:41 PAGE 4   

 180   1          for (; *puts != 0;  puts++)     //遇到停止符0结束
 181   1          {
 182   2              SBUF = *puts;
 183   2              B_TX1_Busy = 1;
 184   2              while(B_TX1_Busy);
 185   2          }
 186   1      }
 187          
 188          //========================================================================
 189          // 函数: SetTimer2Baudraye(u16 dat)
 190          // 描述: 设置Timer2做波特率发生器。
 191          // 参数: dat: Timer2的重装值.
 192          // 返回: none.
 193          // 版本: VER1.0
 194          // 日期: 2014-11-28
 195          // 备注: 
 196          //========================================================================
 197          void SetTimer2Baudraye(u16 dat)  // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 198          {
 199   1          AUXR &= ~(1<<4);    //Timer stop
 200   1          AUXR &= ~(1<<3);    //Timer2 set As Timer
 201   1          AUXR |=  (1<<2);    //Timer2 set as 1T mode
 202   1          TH2 = dat / 256;
 203   1          TL2 = dat % 256;
 204   1          IE2  &= ~(1<<2);    //禁止中断
 205   1          AUXR |=  (1<<4);    //Timer run enable
 206   1      }
 207          
 208          //========================================================================
 209          // 函数: void UART1_config(u8 brt)
 210          // 描述: UART1初始化函数。
 211          // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 212          // 返回: none.
 213          // 版本: VER1.0
 214          // 日期: 2014-11-28
 215          // 备注: 
 216          //========================================================================
 217          void UART1_config(u8 brt)    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
 218          {
 219   1          /*********** 波特率使用定时器2 *****************/
 220   1          if(brt == 2)
 221   1          {
 222   2              AUXR |= 0x01;       //S1 BRT Use Timer2;
 223   2              SetTimer2Baudraye(65536UL - (MAIN_Fosc / 4) / Baudrate1);
 224   2          }
 225   1      
 226   1          /*********** 波特率使用定时器1 *****************/
 227   1          else
 228   1          {
 229   2              TR1 = 0;
 230   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
 231   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
 232   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
 233   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
 234   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) / 256);
 235   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) % 256);
 236   2              ET1 = 0;    //禁止中断
 237   2              INT_CLKO &= ~0x02;  //不输出时钟
 238   2              TR1  = 1;
 239   2          }
 240   1          /*************************************************/
 241   1      
C51 COMPILER V9.59.0.0   UART1                                                             02/28/2022 13:20:41 PAGE 5   

 242   1          SCON = (SCON & 0x3f) | 0x40;    //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 0x80: 9位数
             -据,固定波特率, 0xc0: 9位数据,可变波特率
 243   1      //  PS  = 1;    //高优先级中断
 244   1          ES  = 1;    //允许中断
 245   1          REN = 1;    //允许接收
 246   1          P_SW1 &= 0x3f;
 247   1          P_SW1 |= 0x00;      //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7, 0xC0: P4.3 P
             -4.4
 248   1      //  PCON2 |=  (1<<4);   //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 249   1      
 250   1          B_TX1_Busy = 0;
 251   1          TX1_Cnt = 0;
 252   1          RX1_Cnt = 0;
 253   1      }
 254          
 255          
 256          //========================================================================
 257          // 函数: void UART1_int (void) interrupt UART1_VECTOR
 258          // 描述: UART1中断函数。
 259          // 参数: nine.
 260          // 返回: none.
 261          // 版本: VER1.0
 262          // 日期: 2014-11-28
 263          // 备注: 
 264          //========================================================================
 265          void UART1_int (void) interrupt 4
 266          {
 267   1          if(RI)
 268   1          {
 269   2              RI = 0;
 270   2              RX1_Buffer[RX1_Cnt] = SBUF;
 271   2              if(++RX1_Cnt >= UART1_BUF_LENGTH)   RX1_Cnt = 0;    //防溢出
 272   2          }
 273   1      
 274   1          if(TI)
 275   1          {
 276   2              TI = 0;
 277   2              B_TX1_Busy = 0;
 278   2          }
 279   1      }
 280          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    252    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =     64    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
