C51 COMPILER V9.01   RTC                                                                   08/06/2023 22:03:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN RTC.OBJ
COMPILER INVOKED BY: D:\software\keil4.0\C51\BIN\C51.EXE RTC.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg51.h"
   2          #include "intrins.h"
   3          #include "stdio.h"
   4          
   5          sfr     TH2     =   0xD6;
   6          sfr     TL2     =   0xD7;
   7          sfr     AUXR    =   0x8E;
   8          sfr     P_SW2   =   0xBA;
   9          
  10          sfr     P1M1    =   0x91;
  11          sfr     P1M0    =   0x92;
  12          sfr     P0M1    =   0x93;
  13          sfr     P0M0    =   0x94;
  14          sfr     P2M1    =   0x95;
  15          sfr     P2M0    =   0x96;
  16          sfr     P3M1    =   0xb1;
  17          sfr     P3M0    =   0xb2;
  18          sfr     P4M1    =   0xb3;
  19          sfr     P4M0    =   0xb4;
  20          sfr     P5M1    =   0xc9;
  21          sfr     P5M0    =   0xca;
  22          #define IRC32KCR    (*(unsigned char volatile xdata *)0xfe04) 
  23          #define RTCCR       (*(unsigned char volatile xdata *)0xfe60)
  24          #define RTCCFG      (*(unsigned char volatile xdata *)0xfe61)
  25          #define RTCIEN      (*(unsigned char volatile xdata *)0xfe62)
  26          #define RTCIF       (*(unsigned char volatile xdata *)0xfe63)
  27          #define ALAHOUR     (*(unsigned char volatile xdata *)0xfe64)
  28          #define ALAMIN      (*(unsigned char volatile xdata *)0xfe65)
  29          #define ALASEC      (*(unsigned char volatile xdata *)0xfe66)
  30          #define ALASSEC     (*(unsigned char volatile xdata *)0xfe67)
  31          #define INIYEAR     (*(unsigned char volatile xdata *)0xfe68)
  32          #define INIMONTH    (*(unsigned char volatile xdata *)0xfe69)
  33          #define INIDAY      (*(unsigned char volatile xdata *)0xfe6a)
  34          #define INIHOUR     (*(unsigned char volatile xdata *)0xfe6b)
  35          #define INIMIN      (*(unsigned char volatile xdata *)0xfe6c)
  36          #define INISEC      (*(unsigned char volatile xdata *)0xfe6d)
  37          #define INISSEC     (*(unsigned char volatile xdata *)0xfe6e)
  38          #define YEAR        (*(unsigned char volatile xdata *)0xfe70)
  39          #define MONTH       (*(unsigned char volatile xdata *)0xfe71)
  40          #define DAY         (*(unsigned char volatile xdata *)0xfe72)
  41          #define HOUR        (*(unsigned char volatile xdata *)0xfe73)
  42          #define MIN         (*(unsigned char volatile xdata *)0xfe74)
  43          #define SEC         (*(unsigned char volatile xdata *)0xfe75)
  44          #define SSEC        (*(unsigned char volatile xdata *)0xfe76)
  45          
  46          #define MAIN_Fosc   22118400L
  47          #define Baudrate    115200L
  48          #define TM          (65536 -(MAIN_Fosc/Baudrate/4))
  49          
  50          bit B1S_Flag;
  51          
  52          void RTC_config(void);
  53          
  54          void UartInit(void)
  55          {
C51 COMPILER V9.01   RTC                                                                   08/06/2023 22:03:17 PAGE 2   

  56   1          SCON = (SCON & 0x3f) | 0x40;
  57   1          TL2  = TM;
  58   1          TH2  = TM>>8;
  59   1          AUXR |= 0x15;
  60   1      }
  61          
  62          void UartPutc(unsigned char dat)
  63          {
  64   1          SBUF = dat;
  65   1          while(TI==0);
  66   1          TI = 0;
  67   1      }
  68          
  69          char putchar(char c)
  70          {
  71   1          UartPutc(c);
  72   1          return c;
  73   1      }
  74          
  75          void RTC_Isr() interrupt 13
  76          {
  77   1          char store;
  78   1      
  79   1          store = P_SW2;
  80   1          P_SW2 |= 0x80;                              //使能XFR访问
  81   1      
  82   1          if(RTCIF & 0x08)                            //判断是否秒中断
  83   1          {
  84   2              RTCIF &= ~0x08;                         //清中断标志
  85   2              B1S_Flag = 1;
  86   2          }
  87   1      
  88   1          P_SW2 = store;
  89   1      }
  90          
  91          void main(void)
  92          {
  93   1          P0M1 = 0;   P0M0 = 0;                       //设置为准双向口
  94   1          P1M1 = 0;   P1M0 = 0;                       //设置为准双向口
  95   1          P2M1 = 0;   P2M0 = 0;                       //设置为准双向口
  96   1          P3M1 = 0;   P3M0 = 0;                       //设置为准双向口
  97   1          P4M1 = 0;   P4M0 = 0;                       //设置为准双向口
  98   1          P5M1 = 0;   P5M0 = 0;                       //设置为准双向口
  99   1      
 100   1          UartInit();
 101   1          RTC_config();
 102   1          EA = 1;
 103   1          printf("STC8H4K64TLR RTC Test Programme!\r\n"); //UART发送一个字符串
 104   1      
 105   1          while (1)
 106   1          {
 107   2              if(B1S_Flag)
 108   2              {
 109   3                  B1S_Flag = 0;
 110   3                  P_SW2 |= 0x80;                      //使能XFR访问
 111   3      
 112   3                  printf("Year=20%bd  ", YEAR);
 113   3                  printf("Month=%bd  ", MONTH);
 114   3                  printf("Day=%bd  ", DAY);
 115   3                  printf("Hour=%bd  ", HOUR);
 116   3                  printf("Minute=%bd  ", MIN);
 117   3                  printf("Second=%bd  ", SEC);
C51 COMPILER V9.01   RTC                                                                   08/06/2023 22:03:17 PAGE 3   

 118   3                  printf("\r\n");
 119   3      
 120   3                  P_SW2 &= ~0x80;                     //禁止XFR访问
 121   3              }
 122   2      
 123   2                      //printf("hello world!\r\n"); //UART发送一个字符串
 124   2          }
 125   1      }
 126          
 127          void RTC_config(void)
 128          {
 129   1          P_SW2 |= 0x80;                              //使能XFR访问
 130   1              IRC32KCR = 0x80;
 131   1              while(!(IRC32KCR &0x01));
 132   1              RTCCFG |= 0x02;                             //触发RTC寄存器初始化
 133   1          INIYEAR = 23;                               //Y:2021
 134   1          INIMONTH = 8;                              //M:12
 135   1          INIDAY = 6;                                //D:31
 136   1          INIHOUR = 22;                               //H:23
 137   1          INIMIN = 3;                                //M:59
 138   1          INISEC = 50;                                //S:50
 139   1          INISSEC = 0;                                //S/128:0
 140   1          RTCCFG |= 0x01;
 141   1      
 142   1          RTCIF = 0;                                  //清中断标志
 143   1          RTCIEN = 0x08;                              //使能RTC秒中断
 144   1          RTCCR = 0x01;                               // RTC使能
 145   1          P_SW2 &= ~0x80;                             //禁止XFR访问
 146   1      }
 147          
 148          /*
 149          
 150          ;将以下代码保存为ASM格式文件，一起加载到项目里，例如：isr.asm
 151          
 152              CSEG    AT  0123H
 153              JMP     006BH
 154              END
 155          
 156          */
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    310    ----
   CONSTANT SIZE    =    110    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
